on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-[0-9]+'

name: Prerelease

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Prerelease ${{ github.ref }}
          body: |
            Install with [`npm install @fliegwerk/logsemts@next`](https://www.npmjs.com/package/@fliegwerk/logsemts/v/next).

            For release notes, please check the [Changelog](https://github.com/fliegwerk/logsemts/blob/master/CHANGELOG.md).
          draft: false
          prerelease: true
      - uses: actions/setup-node@v3
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - name: Tests
        run: npm test
      - run: npm run build
      - run: npm run build:docs
      - name: Release on npm @next
        run: npm publish --access public --tag next
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
      - run: cp LICENSE build
      - run: cp README.md build
      - run: zip -r docs.zip docs
      - run: zip -r build.zip build
      - name: Upload docs folder
        id: upload-docs
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./docs.zip
          asset_name: docs.zip
          asset_content_type: application/zip
      - name: Upload build folder
        id: upload-build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build.zip
          asset_name: build.zip
          asset_content_type: application/zip
